{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAoBeA,EAjBE,SAAC,GAAe,EAAbC,OAElB,MAAM,IAAIC,MAAM,aCUHC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCCK,EARA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,KCgBWK,E,kDAlBZ,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACVC,UAAU,GAHG,E,8DAODC,EAAOC,GACtBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAOG,KAAKJ,MAAMC,SACf,2DACAG,KAAKL,MAAMN,a,GAfQa,aCgDbC,E,kDA1Cd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZjB,OAAQ,GACRG,YAAa,IAJD,E,gEAQO,IAAD,OACnB0B,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAOjC,IAAD,EACwBZ,KAAKJ,MAA7BjB,EADA,EACAA,OAAQG,EADR,EACQA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAGtD,OAAQtC,EAAOwC,OAGb,sBAAKnC,UAAU,KAAf,UACC,iCACC,oBAAIA,UAAU,KAAd,2BAED,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WATtB,uD,GA3BeO,IAAMlB,W,MCAxBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0f46b17a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tif (true) {\r\n\t\tthrow new Error('NOOOOOOO')\r\n\t}\r\n\r\n\treturn (\r\n\t\trobots.map((user, i) => {\r\n\t\t\treturn (<Card\r\n\t\t\t\tkey={i}\r\n\t\t\t\tid={robots[i].id}\r\n\t\t\t\tname={robots[i].name}\r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t/>)\r\n\t\t})\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = ({children}) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         hasError: false\r\n      }\r\n   }\r\n\r\n   componentDidCatch(error, info) {\r\n      this.setState({ hasError: true })\r\n   }\r\n\r\n   render() {\r\n      return this.state.hasError ?\r\n         <h1>Oops!!! That is not good!</h1> :\r\n         this.props.children;\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => { this.setState({ robots: users }) });\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading robots...</h1> :\r\n\t\t\t(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}